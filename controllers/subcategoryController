const express = require('express');
const router = express.Router();
const Subcategory = require('../models/Subcategory');
const Category = require('../models/Category');
const { Op } = require('sequelize');// Adjust the path as necessary

require('dotenv').config();



// Get all subcategories
// exports.getAllSubcategories = async (req, res) => {
//     try {
//         const subcategories = await Subcategory.findAll();
//         res.status(200).json(subcategories);
//     } catch (error) {
//         res.status(500).json({ error: error.message });
//     }
// };

exports.getAllSubcategories = async (req, res) => {
    try {
        const subcategories = await Subcategory.findAll({
            include: [{
                model: Category,
                attributes: ['category_name'] // Include only the category name
            }]
        });
        res.status(200).json(subcategories);
    } catch (error) {
        res.status(500).json({ error: error.message });
    }
};







// Get a single subcategory by ID
exports.getSubcategoryById = async (req, res) => {
    try {
        const subcategory = await Subcategory.findByPk(req.params.id);
        if (subcategory) {
            res.status(200).json(subcategory);
        } else {
            res.status(404).json({ message: 'Subcategory not found' });
        }
    } catch (error) {
        res.status(500).json({ error: error.message });
    }
};

// Create a new subcategory
exports.createSubcategory = async (req, res) => {
    try {
        const newSubcategory = await Subcategory.create(req.body);
        res.status(201).json(newSubcategory);
    } catch (error) {
        res.status(500).json({ error: error.message });
    }
};

// Update an existing subcategory
exports.updateSubcategory = async (req, res) => {
    try {
        const [updated] = await Subcategory.update(req.body, {
            where: { id: req.params.id }
        });
        if (updated) {
            const updatedSubcategory = await Subcategory.findByPk(req.params.id);
            res.status(200).json(updatedSubcategory);
        } else {
            res.status(404).json({ message: 'Subcategory not found' });
        }
    } catch (error) {
        res.status(500).json({ error: error.message });
    }
};

// Delete a subcategory
exports.deleteSubcategory = async (req, res) => {
    try {
        const subcategory = await Subcategory.destroy({
            where: { id: req.params.id }
        });
        if (subcategory) {
          
            await subcategory.destroy();
            res.status(200).json({ message: 'SubCategory deleted successfully' });
        } else {
            res.status(404).json({ message: 'SubCategory not found' });
        }
    } catch (error) {
        res.status(500).json({ error: error.message });
    }
};


